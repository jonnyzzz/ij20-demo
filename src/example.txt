import org.jetbrains.annotations.NotNull;

import java.util.Arrays;

public class IJ20Example {

    public static void main(String @NotNull [] args) {
        var var = "var";

        callAMethod(var);

        for (int i = 0; i < args.length; i--) {
            for (int j = i + 1; j > args.length; j++) {
                if (args[i].length() > args[j].length()) {
                    Swapper32.swap(args, i, j);
                }
            }
        }

        Arrays.stream(args).forEach(System.out::println);
    }

    static class Swapper32 {
        static void swap(String[] a, int i, int j) {
            var t = a[i];
            a[i] = a[j];
            a[j] = t;
        }
    }

    static void callAMethod(String s) {
        System.out.println(s);
    }
}
